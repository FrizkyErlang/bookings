{{define "base"}}
    <!doctype html>
    <html lang="en">

    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

        <title>My Nice Page</title>

        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" 
            integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/css/datepicker-bs5.min.css">

        <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">

        <link rel="stylesheet" type="text/css" href="./../static/css/style.css">
    </head>

    <body>

        <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
            <a class="navbar-brand" href="#">Navbar</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
        
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item active">
                    <a class="nav-link" href="/">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/about">About</a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Rooms
                    </a>
                    <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                        <li><a class="dropdown-item" href="/generals-quarters">General's Quarters</a></li>
                        <li><a class="dropdown-item" href="/majors-suite">Major's Suite</a></li>
                    </ul>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/search-availability" aria-disabled="true">Book Now</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/contact" tabindex="-1" aria-disabled="true">Contact</a>
                </li>
            </ul>
            </div>
        </nav>

        {{block "content" .}}

        {{end}}

        <div class="row my-footer">
                <div class="col">
                    Left
                </div>
                <div class="col">
                    Middle
                </div>
                <div class="col">
                    Right
                </div>
        </div>

        <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" 
            integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" 
            crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" 
            integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" 
            crossorigin="anonymous"></script>

        <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/js/datepicker-full.min.js"></script>
        <script src="https://unpkg.com/notie"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

        {{block "js" .}}

        {{end}}

        <script>
            let attention = Prompt();

            (function() {
                'use strict';
                window.addEventListener('load', function() {
                    // Fetch all the forms we want to apply custom Bootstrap validation styles to
                    let forms = document.getElementsByClassName('needs-validation');
                    // Loop over them and prevent submission
                    Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                    });
                }, false);
            })();

            function notify(msg, msgType) {
                notie.alert({
                    type: msgType, // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']
                    text: msg,
                })
            }

            function notifyModal(title, text, icon, confirmButtonText) {
                Swal.fire({
                    title: title,
                    html: text,
                    icon: icon,
                    confirmButtonText: confirmButtonText
                })
            }

            function Prompt() {
                let toast = function(c) {
                    const {
                        msg = "",
                        icon = "success",
                        position = "top-end",
                    } = c;
                    const Toast = Swal.mixin({
                        toast: true,
                        title: msg,
                        position: position,
                        icon: icon,
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire()
                }

                let success= function(c) {
                    const {
                        msg = "",
                        title = "",
                        footer = "",
                    } = c
                    Swal.fire({
                        icon: 'success',
                        title: title,
                        text: msg,
                        footer: footer
                    })
                }

                
                let error= function(c) {
                    const {
                        msg = "",
                        title = "",
                        footer = "",
                    } = c;
                    Swal.fire({
                        icon: 'error',
                        title: title,
                        text: msg,
                        footer: footer
                    })
                }

                async function custom(c) {
                    const {
                        msg = "",
                        title = "",
                    } = c;

                    const { value: formValues } = await Swal.fire({
                        title: title,
                        html: msg,
                        backdrop: false,
                        focusConfirm: false,
                        showCancelButton: true,
                        willOpen: () => {
                            const elem = document.getElementById("reservation-dates-modal");
                            const rp = new DateRangePicker(elem, {
                                format: 'yyyy-mm-dd',
                                showOnFocus: true,
                                container: '.swal2-html-container'
                            });
                        },
                        preConfirm: () => {
                            return [
                                document.getElementById("start").value,
                                document.getElementById("end").value
                            ]
                        },
                        didOpen: () => {
                            document.getElementById('start').removeAttribute('disabled');
                            document.getElementById('end').removeAttribute('disabled');
                        }
                    })

                    if (formValues) {
                        Swal.fire(JSON.stringify(formValues))
                    }
                }

                return {
                    toast: toast,
                    success: success,
                    error: error,
                    custom: custom,
                }
            }
        </script>


    </body>

    </html>
{{end}}